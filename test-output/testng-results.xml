<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="14" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="221480" started-at="2019-06-26T06:51:37Z" finished-at="2019-06-26T06:55:18Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="221480" started-at="2019-06-26T06:51:37Z" finished-at="2019-06-26T06:55:18Z">
      <class name="TestNgScripts.QuickQuotes">
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="setUp" is-config="true" duration-ms="141" started-at="2019-06-26T06:51:37Z" finished-at="2019-06-26T06:51:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openBrowser" is-config="true" duration-ms="3646" started-at="2019-06-26T06:51:37Z" finished-at="2019-06-26T06:51:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="11649" started-at="2019-06-26T06:51:40Z" finished-at="2019-06-26T06:51:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="AddingQuestion()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="AddingQuestion" duration-ms="10406" started-at="2019-06-26T06:51:52Z" finished-at="2019-06-26T06:52:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddingQuestion -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1666" started-at="2019-06-26T06:52:02Z" finished-at="2019-06-26T06:52:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="13" started-at="2019-06-26T06:52:04Z" finished-at="2019-06-26T06:52:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddingQuestion status=SUCCESS method=QuickQuotes.AddingQuestion()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4350" started-at="2019-06-26T06:52:04Z" finished-at="2019-06-26T06:52:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="QQByName()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="QQByName" duration-ms="372" started-at="2019-06-26T06:52:08Z" finished-at="2019-06-26T06:52:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QQByName -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="4040" started-at="2019-06-26T06:52:09Z" finished-at="2019-06-26T06:52:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4614" started-at="2019-06-26T06:52:13Z" finished-at="2019-06-26T06:52:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-26T06:52:13Z" finished-at="2019-06-26T06:52:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QQByName status=SUCCESS method=QuickQuotes.QQByName()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Verfiyadding5lots()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="Verfiyadding5lots" duration-ms="14503" started-at="2019-06-26T06:52:17Z" finished-at="2019-06-26T06:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verfiyadding5lots -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1563" started-at="2019-06-26T06:52:32Z" finished-at="2019-06-26T06:52:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-26T06:52:33Z" finished-at="2019-06-26T06:52:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Verfiyadding5lots status=SUCCESS method=QuickQuotes.Verfiyadding5lots()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4171" started-at="2019-06-26T06:52:33Z" finished-at="2019-06-26T06:52:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifyDate()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifyDate" duration-ms="3010" started-at="2019-06-26T06:52:38Z" finished-at="2019-06-26T06:52:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDate -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="2788" started-at="2019-06-26T06:52:41Z" finished-at="2019-06-26T06:52:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-26T06:52:43Z" finished-at="2019-06-26T06:52:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDate status=SUCCESS method=QuickQuotes.VerifyDate()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4528" started-at="2019-06-26T06:52:43Z" finished-at="2019-06-26T06:52:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifyDelQues()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifyDelQues" duration-ms="3985" started-at="2019-06-26T06:52:48Z" finished-at="2019-06-26T06:52:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDelQues -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="2049" started-at="2019-06-26T06:52:52Z" finished-at="2019-06-26T06:52:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-26T06:52:54Z" finished-at="2019-06-26T06:52:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDelQues status=SUCCESS method=QuickQuotes.VerifyDelQues()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4680" started-at="2019-06-26T06:52:54Z" finished-at="2019-06-26T06:52:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifyDes()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifyDes" duration-ms="10888" started-at="2019-06-26T06:52:59Z" finished-at="2019-06-26T06:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDes -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1350" started-at="2019-06-26T06:53:10Z" finished-at="2019-06-26T06:53:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-26T06:53:11Z" finished-at="2019-06-26T06:53:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDes status=SUCCESS method=QuickQuotes.VerifyDes()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4222" started-at="2019-06-26T06:53:11Z" finished-at="2019-06-26T06:53:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifyDocupload()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifyDocupload" duration-ms="10765" started-at="2019-06-26T06:53:15Z" finished-at="2019-06-26T06:53:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDocupload -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1736" started-at="2019-06-26T06:53:26Z" finished-at="2019-06-26T06:53:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-26T06:53:28Z" finished-at="2019-06-26T06:53:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyDocupload status=SUCCESS method=QuickQuotes.VerifyDocupload()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4769" started-at="2019-06-26T06:53:28Z" finished-at="2019-06-26T06:53:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifyGetquotedisLotname()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifyGetquotedisLotname" duration-ms="8167" started-at="2019-06-26T06:53:32Z" finished-at="2019-06-26T06:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGetquotedisLotname -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1363" started-at="2019-06-26T06:53:41Z" finished-at="2019-06-26T06:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-26T06:53:42Z" finished-at="2019-06-26T06:53:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGetquotedisLotname status=SUCCESS method=QuickQuotes.VerifyGetquotedisLotname()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4298" started-at="2019-06-26T06:53:42Z" finished-at="2019-06-26T06:53:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifyGetquotedisQuesLot()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifyGetquotedisQuesLot" duration-ms="928" started-at="2019-06-26T06:53:46Z" finished-at="2019-06-26T06:53:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyGetquotedisQuesLot -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="3649" started-at="2019-06-26T06:53:47Z" finished-at="2019-06-26T06:53:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-26T06:53:51Z" finished-at="2019-06-26T06:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyGetquotedisQuesLot status=SUCCESS method=QuickQuotes.VerifyGetquotedisQuesLot()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4345" started-at="2019-06-26T06:53:51Z" finished-at="2019-06-26T06:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifymsgonEventname()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifymsgonEventname" duration-ms="6470" started-at="2019-06-26T06:53:55Z" finished-at="2019-06-26T06:54:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifymsgonEventname -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1494" started-at="2019-06-26T06:54:02Z" finished-at="2019-06-26T06:54:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-26T06:54:03Z" finished-at="2019-06-26T06:54:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifymsgonEventname status=SUCCESS method=QuickQuotes.VerifymsgonEventname()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4139" started-at="2019-06-26T06:54:03Z" finished-at="2019-06-26T06:54:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifymsgonLotname()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifymsgonLotname" duration-ms="14417" started-at="2019-06-26T06:54:07Z" finished-at="2019-06-26T06:54:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifymsgonLotname -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1640" started-at="2019-06-26T06:54:22Z" finished-at="2019-06-26T06:54:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-26T06:54:23Z" finished-at="2019-06-26T06:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifymsgonLotname status=SUCCESS method=QuickQuotes.VerifymsgonLotname()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4488" started-at="2019-06-26T06:54:23Z" finished-at="2019-06-26T06:54:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="FAIL" signature="VerifymsgonQuantity()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifymsgonQuantity" duration-ms="13919" started-at="2019-06-26T06:54:28Z" finished-at="2019-06-26T06:54:42Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//SPAN[@class='text-danger'][text()='Should be a valid number']"}
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CISM532', ip: '192.168.3.23', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_66'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\cis1\AppData\Local...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50857}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 75.0.3770.100, webStorageEnabled: true}
Session ID: 349a6f74a7bbcd701a4ba7adc06a81b7
*** Element info: {Using=xpath, value=//SPAN[@class='text-danger'][text()='Should be a valid number']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//SPAN[@class='text-danger'][text()='Should be a valid number']"}
  (Session info: chrome=75.0.3770.100)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'CISM532', ip: '192.168.3.23', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_66'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\cis1\AppData\Local...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:50857}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 75.0.3770.100, webStorageEnabled: true}
Session ID: 349a6f74a7bbcd701a4ba7adc06a81b7
*** Element info: {Using=xpath, value=//SPAN[@class='text-danger'][text()='Should be a valid number']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at TestNgScripts.QuickQuotes.VerifymsgonQuantity(QuickQuotes.java:146)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifymsgonQuantity -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1437" started-at="2019-06-26T06:54:42Z" finished-at="2019-06-26T06:54:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="6" started-at="2019-06-26T06:54:43Z" finished-at="2019-06-26T06:54:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifymsgonQuantity status=FAILURE method=QuickQuotes.VerifymsgonQuantity()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4659" started-at="2019-06-26T06:54:43Z" finished-at="2019-06-26T06:54:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifymsgonQues()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifymsgonQues" duration-ms="13399" started-at="2019-06-26T06:54:48Z" finished-at="2019-06-26T06:55:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifymsgonQues -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1335" started-at="2019-06-26T06:55:01Z" finished-at="2019-06-26T06:55:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-26T06:55:03Z" finished-at="2019-06-26T06:55:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifymsgonQues status=SUCCESS method=QuickQuotes.VerifymsgonQues()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="openApplication" is-config="true" duration-ms="4667" started-at="2019-06-26T06:55:03Z" finished-at="2019-06-26T06:55:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="VerifyonDeltelot()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="VerifyonDeltelot" duration-ms="7142" started-at="2019-06-26T06:55:07Z" finished-at="2019-06-26T06:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyonDeltelot -->
        <test-method status="PASS" signature="ReturnToHome()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="ReturnToHome" is-config="true" duration-ms="1394" started-at="2019-06-26T06:55:14Z" finished-at="2019-06-26T06:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReturnToHome -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-26T06:55:16Z" finished-at="2019-06-26T06:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyonDeltelot status=SUCCESS method=QuickQuotes.VerifyonDeltelot()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="CloseBrowser" is-config="true" duration-ms="2314" started-at="2019-06-26T06:55:16Z" finished-at="2019-06-26T06:55:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TestNgScripts.QuickQuotes@754ba872]" name="tearDown" is-config="true" duration-ms="291" started-at="2019-06-26T06:55:18Z" finished-at="2019-06-26T06:55:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestNgScripts.QuickQuotes -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
